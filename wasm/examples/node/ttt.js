/**
 * Tests against the contract here:
 * https://github.com/counterfactual/monorepo/blob/master/packages/apps/contracts/TicTacToeApp.sol.
 */

// Referencing the built package for convenience. Replace with require('pure-evm') when
// using on one's own.
const pure_evm = require("../../pkg-node");
const ethers = require("ethers");
const assert = require("assert");

// Execute on the raw bytes.
let output = pure_evm.exec(tttBytecode(), tttData());
// Prepare for decoding.
let output_hex = "0x" + Buffer.from(output).toString("hex");
// First abi decode bytes, since that's the return value of the function.
let bytes = ethers.utils.defaultAbiCoder.decode(["bytes"], output)[0];
// Now decode the state data, since that's what the bytes represent.
const state_data = ethers.utils.defaultAbiCoder.decode([stateAbi()], bytes)[0];
// Assert the state was properly updated.
assert.equal(
  state_data.players + "",
  [
    "0x2F203264a671832b543acfd5558ae684Cd1C5A5a",
    "0x28C69cD429F785954Ae4B0263Db4d9871C033cA7",
  ] + ""
);
assert.equal(state_data.turnNum + "", "2");
assert.equal(state_data.winner + "", "0");
assert.equal(state_data.board[0] + "", "1,0,0");
assert.equal(state_data.board[1] + "", "0,2,0");
assert.equal(state_data.board[2] + "", "0,0,0");

console.log("Tic-tac-toe success.");

function stateAbi() {
  return `
        tuple(
          address[2] players,
          uint256 turnNum,
          uint256 winner,
          uint256[3][3] board
        )
      `;
}

function actionAbi() {
  return `
        tuple(
          uint8 actionType,
          uint256 playX,
          uint256 playY,
          tuple(
            uint8 winClaimType,
            uint256 idx
          ) winClaim
        )
      `;
}

function tttData() {
  const state = {
    players: [
      "0x2F203264a671832b543acfd5558ae684Cd1C5A5a",
      "0x28C69cD429F785954Ae4B0263Db4d9871C033cA7",
    ],
    turnNum: 1,
    winner: 0,
    board: [
      [1, 0, 0],
      [0, 0, 0],
      [0, 0, 0],
    ],
  };
  const action = {
    actionType: 0,
    playX: 1,
    playY: 1,
    winClaim: {
      winClaimType: 0,
      idx: 0,
    },
  };

  let state_data = ethers.utils.defaultAbiCoder.encode([stateAbi()], [state]);
  let action_data = ethers.utils.defaultAbiCoder.encode(
    [actionAbi()],
    [action]
  );
  let iface = new ethers.utils.Interface(tttAbi());
  let data = iface
    .encodeFunctionData("applyAction", [state_data, action_data])
    .substr(2);

  return Uint8Array.from(Buffer.from(data, "hex"));
}

function tttAbi() {
  return [
    {
      constant: true,
      inputs: [
        {
          name: "encodedState",
          type: "bytes",
        },
        {
          components: [
            {
              name: "assetType",
              type: "uint8",
            },
            {
              name: "limit",
              type: "uint256",
            },
            {
              name: "token",
              type: "address",
            },
          ],
          name: "terms",
          type: "tuple",
        },
      ],
      name: "resolve",
      outputs: [
        {
          components: [
            {
              name: "assetType",
              type: "uint8",
            },
            {
              name: "token",
              type: "address",
            },
            {
              name: "to",
              type: "address[]",
            },
            {
              name: "value",
              type: "uint256[]",
            },
            {
              name: "data",
              type: "bytes[]",
            },
          ],
          name: "",
          type: "tuple",
        },
      ],
      payable: false,
      stateMutability: "pure",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        {
          name: "encodedState",
          type: "bytes",
        },
        {
          name: "encodedAction",
          type: "bytes",
        },
      ],
      name: "applyAction",
      outputs: [
        {
          name: "",
          type: "bytes",
        },
      ],
      payable: false,
      stateMutability: "pure",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        {
          name: "encodedState",
          type: "bytes",
        },
      ],
      name: "isStateTerminal",
      outputs: [
        {
          name: "",
          type: "bool",
        },
      ],
      payable: false,
      stateMutability: "pure",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        {
          name: "encodedState",
          type: "bytes",
        },
        {
          name: "signingKeys",
          type: "address[]",
        },
      ],
      name: "getTurnTaker",
      outputs: [
        {
          name: "",
          type: "address",
        },
      ],
      payable: false,
      stateMutability: "pure",
      type: "function",
    },
  ];
}

function tttBytecode() {
  let bytecode =
    "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634e8ecff41461005157806351c2e5411461008157806359e537c1146100b1578063ce963afd146100e1575b600080fd5b61006b6004803603610066919081019061154a565b610111565b6040516100789190611ca2565b60405180910390f35b61009b600480360361009691908101906114de565b6104ed565b6040516100a89190611bc4565b60405180910390f35b6100cb60048036036100c69190810190611431565b6106dc565b6040516100d89190611ba9565b60405180910390f35b6100fb60048036036100f69190810190611472565b61070d565b6040516101089190611b8e565b60405180910390f35b610119610e90565b610121610ed8565b8380602001905161013591908101906115c7565b905060008160400151141561017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690611c06565b60405180910390fd5b606060026040519080825280602002602001820160405280156101b15781602001602082028038833980820191505090505b509050606060026040519080825280602002602001820160405280156101e65781602001602082028038833980820191505090505b5090506060600260405190808252806020026020018201604052801561022057816020015b606081526020019060019003908161020b5790505b50905060038460400151141561038d57600286602001518161023e57fe5b048360008151811061024c57fe5b602002602001018181525050600286602001518161026657fe5b048360018151811061027457fe5b602002602001018181525050836000015160006002811061029157fe5b6020020151826000815181106102a357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600001516001600281106102ee57fe5b60200201518260018151811061030057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506040518060a00160405280876000015160ff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff168152602001838152602001848152602001828152509450505050506104e7565b600084600001516001866040015103600281106103a657fe5b60200201519050600085600001518660400151600203600281106103c657fe5b602002015190508760200151856000815181106103df57fe5b6020026020010181815250506000856001815181106103fa57fe5b602002602001018181525050818460008151811061041457fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808460018151811061045c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506040518060a00160405280896000015160ff168152602001896040015173ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018681526020018481525096505050505050505b92915050565b60606104f7610ed8565b8380602001905161050b91908101906115c7565b9050610515610f0d565b83806020019051610529919081019061159e565b9050610533610ed8565b6000600381111561054057fe5b8260000151600381111561055057fe5b141561057f5761057883600285602001518161056857fe5b0684602001518560400151610758565b90506106a0565b6001600381111561058c57fe5b8260000151600381111561059c57fe5b1415610603576105c48360028560200151816105b457fe5b0684602001518560400151610758565b90506105e360028460200151816105d757fe5b0682846060015161084d565b600160028260200151816105f357fe5b060181604001818152505061069f565b6002600381111561061057fe5b8260000151600381111561062057fe5b14156106635761064883600285602001518161063857fe5b0684602001518560400151610758565b905061065381610deb565b600381604001818152505061069e565b60038081111561066f57fe5b8260000151600381111561067f57fe5b141561069d5761068e83610deb565b82905060038160400181815250505b5b5b5b6001816020018181510191508181525050806040516020016106c29190611c86565b604051602081830303815290604052935050505092915050565b60006106e6610ed8565b828060200190516106fa91908101906115c7565b9050600081604001511415915050919050565b6000610717610ed8565b8380602001905161072b91908101906115c7565b905082600282602001518161073c57fe5b068151811061074757fe5b602002602001015191505092915050565b610760610ed8565b60008560600151846003811061077257fe5b6020020151836003811061078257fe5b6020020151146107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be90611c26565b60405180910390fd5b60008414806107d65750600184145b610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90611be6565b60405180910390fd5b600184018560600151846003811061082957fe5b6020020151836003811061083957fe5b602002018181525050849050949350505050565b60006001840190506000600381111561086257fe5b8260000151600381111561087257fe5b14156109be5780836060015183602001516003811061088d57fe5b602002015160006003811061089e57fe5b6020020151146108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90611c66565b60405180910390fd5b8083606001518360200151600381106108f857fe5b602002015160016003811061090957fe5b60200201511461094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590611c66565b60405180910390fd5b80836060015183602001516003811061096357fe5b602002015160026003811061097457fe5b6020020151146109b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b090611c66565b60405180910390fd5b610de5565b600160038111156109cb57fe5b826000015160038111156109db57fe5b1415610b27578083606001516000600381106109f357fe5b6020020151836020015160038110610a0757fe5b602002015114610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611c66565b60405180910390fd5b808360600151600160038110610a5e57fe5b6020020151836020015160038110610a7257fe5b602002015114610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611c66565b60405180910390fd5b808360600151600260038110610ac957fe5b6020020151836020015160038110610add57fe5b602002015114610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1990611c66565b60405180910390fd5b610de4565b60026003811115610b3457fe5b82600001516003811115610b4457fe5b1415610c8757808360600151600060038110610b5c57fe5b6020020151600060038110610b6d57fe5b602002015114610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990611c66565b60405180910390fd5b808360600151600160038110610bc457fe5b6020020151600160038110610bd557fe5b602002015114610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1190611c66565b60405180910390fd5b808360600151600260038110610c2c57fe5b6020020151600260038110610c3d57fe5b602002015114610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7990611c66565b60405180910390fd5b610de3565b600380811115610c9357fe5b82600001516003811115610ca357fe5b1415610de257808360600151600260038110610cbb57fe5b6020020151600060038110610ccc57fe5b602002015114610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0890611c66565b60405180910390fd5b808360600151600160038110610d2357fe5b6020020151600160038110610d3457fe5b602002015114610d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7090611c66565b60405180910390fd5b808360600151600060038110610d8b57fe5b6020020151600260038110610d9c57fe5b602002015114610de1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd890611c66565b60405180910390fd5b5b5b5b5b50505050565b60008090505b6003811015610e8c5760008090505b6003811015610e7e57600083606001518360038110610e1b57fe5b60200201518260038110610e2b57fe5b60200201511415610e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6890611c46565b60405180910390fd5b8080600101915050610e00565b508080600101915050610df1565b5050565b6040518060a00160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b604051806101a00160405280610eec610f46565b81526020016000815260200160008152602001610f07610f68565b81525090565b6040518060a0016040528060006003811115610f2557fe5b81526020016000815260200160008152602001610f40610f96565b81525090565b6040518060400160405280600290602082028038833980820191505090505090565b6040518061012001604052806003905b610f80610fbb565b815260200190600190039081610f785790505090565b604051806040016040528060006003811115610fae57fe5b8152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6000610fe98235611f72565b905092915050565b6000610ffd8251611f72565b905092915050565b600082601f83011261101657600080fd5b600261102961102482611cf1565b611cc4565b9150818385602084028201111561103f57600080fd5b60005b8381101561106f57816110558882610ff1565b845260208401935060208301925050600181019050611042565b5050505092915050565b600082601f83011261108a57600080fd5b813561109d61109882611d13565b611cc4565b915081818352602084019350602081019050838560208402820111156110c257600080fd5b60005b838110156110f257816110d88882610fdd565b8452602084019350602083019250506001810190506110c5565b5050505092915050565b600082601f83011261110d57600080fd5b600361112061111b82611d3b565b611cc4565b9150818385606084028201111561113657600080fd5b60005b83811015611166578161114c8882611170565b845260208401935060608301925050600181019050611139565b5050505092915050565b600082601f83011261118157600080fd5b600361119461118f82611d5d565b611cc4565b915081838560208402820111156111aa57600080fd5b60005b838110156111da57816111c08882611409565b8452602084019350602083019250506001810190506111ad565b5050505092915050565b600082601f8301126111f557600080fd5b813561120861120382611d7f565b611cc4565b9150808252602083016020830185838301111561122457600080fd5b61122f838284611fe9565b50505092915050565b60006112448251611f84565b905092915050565b60006112588251611f9b565b905092915050565b600060a0828403121561127257600080fd5b61127c6080611cc4565b9050600061128c84828501611238565b60008301525060206112a084828501611409565b60208301525060406112b484828501611409565b60408301525060606112c8848285016113a9565b60608301525092915050565b60006101a082840312156112e757600080fd5b6112f16080611cc4565b9050600061130184828501611005565b600083015250604061131584828501611409565b602083015250606061132984828501611409565b604083015250608061133d848285016110fc565b60608301525092915050565b60006060828403121561135b57600080fd5b6113656060611cc4565b905060006113758482850161141d565b6000830152506020611389848285016113f5565b602083015250604061139d84828501610fdd565b60408301525092915050565b6000604082840312156113bb57600080fd5b6113c56040611cc4565b905060006113d58482850161124c565b60008301525060206113e984828501611409565b60208301525092915050565b60006114018235611fd2565b905092915050565b60006114158251611fd2565b905092915050565b60006114298235611fdc565b905092915050565b60006020828403121561144357600080fd5b600082013567ffffffffffffffff81111561145d57600080fd5b611469848285016111e4565b91505092915050565b6000806040838503121561148557600080fd5b600083013567ffffffffffffffff81111561149f57600080fd5b6114ab858286016111e4565b925050602083013567ffffffffffffffff8111156114c857600080fd5b6114d485828601611079565b9150509250929050565b600080604083850312156114f157600080fd5b600083013567ffffffffffffffff81111561150b57600080fd5b611517858286016111e4565b925050602083013567ffffffffffffffff81111561153457600080fd5b611540858286016111e4565b9150509250929050565b6000806080838503121561155d57600080fd5b600083013567ffffffffffffffff81111561157757600080fd5b611583858286016111e4565b925050602061159485828601611349565b9150509250929050565b600060a082840312156115b057600080fd5b60006115be84828501611260565b91505092915050565b60006101a082840312156115da57600080fd5b60006115e8848285016112d4565b91505092915050565b60006115fd838361164d565b60208301905092915050565b600061161583836117dc565b60608301905092915050565b600061162d83836118d1565b905092915050565b60006116418383611b70565b60208301905092915050565b61165681611f1d565b82525050565b61166581611f1d565b82525050565b61167481611df0565b61167e8184611e96565b925061168982611dab565b60005b828110156116b75761169f8583516115f1565b94506116aa82611e48565b915060018101905061168c565b5050505050565b60006116c982611dfb565b6116d38185611ea1565b93506116de83611db5565b60005b8281101561170c576116f48683516115f1565b95506116ff82611e55565b91506001810190506116e1565b50849250505092915050565b61172181611e06565b61172b8184611eb2565b925061173682611dc2565b60005b828110156117645761174c858351611609565b945061175782611e62565b9150600181019050611739565b5050505050565b600061177682611e11565b6117808185611ebd565b93508360208202850161179285611dcc565b60005b848110156117cb5783830388526117ad838351611621565b92506117b882611e6f565b9150602088019750600181019050611795565b508196508694505050505092915050565b6117e581611e1c565b6117ef8184611ece565b92506117fa82611dd9565b60005b8281101561182857611810858351611635565b945061181b82611e7c565b91506001810190506117fd565b5050505050565b600061183a82611e27565b6118448185611ed9565b935061184f83611de3565b60005b8281101561187d57611865868351611635565b955061187082611e89565b9150600181019050611852565b50849250505092915050565b61189281611f2f565b82525050565b60006118a382611e3d565b6118ad8185611efb565b93506118bd818560208601611ff8565b6118c68161202b565b840191505092915050565b60006118dc82611e32565b6118e68185611eea565b93506118f6818560208601611ff8565b6118ff8161202b565b840191505092915050565b6000611917602683611f0c565b91507f706c61794d6f76653a20706c617965724964206e6f7420696e2072616e67652060008301527f5b302c20315d00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061197d601c83611f0c565b91507f57696e6e6572207761732073657420746f20303b20696e76616c6964000000006000830152602082019050919050565b60006119bd601d83611f0c565b91507f706c61794d6f76653a20737175617265206973206e6f7420656d7074790000006000830152602082019050919050565b60006119fd602283611f0c565b91507f617373657274426f617264497346756c6c3a2073717561726520697320656d7060008301527f74790000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a63601383611f0c565b91507f57696e20436c61696d206e6f742076616c6964000000000000000000000000006000830152602082019050919050565b6101a082016000820151611aad600085018261166b565b506020820151611ac06040850182611b70565b506040820151611ad36060850182611b70565b506060820151611ae66080850182611718565b50505050565b600060a083016000830151611b046000860182611b7f565b506020830151611b17602086018261164d565b5060408301518482036040860152611b2f82826116be565b91505060608301518482036060860152611b49828261182f565b91505060808301518482036080860152611b63828261176b565b9150508091505092915050565b611b7981611f5b565b82525050565b611b8881611f65565b82525050565b6000602082019050611ba3600083018461165c565b92915050565b6000602082019050611bbe6000830184611889565b92915050565b60006020820190508181036000830152611bde8184611898565b905092915050565b60006020820190508181036000830152611bff8161190a565b9050919050565b60006020820190508181036000830152611c1f81611970565b9050919050565b60006020820190508181036000830152611c3f816119b0565b9050919050565b60006020820190508181036000830152611c5f816119f0565b9050919050565b60006020820190508181036000830152611c7f81611a56565b9050919050565b60006101a082019050611c9c6000830184611a96565b92915050565b60006020820190508181036000830152611cbc8184611aec565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715611ce757600080fd5b8060405250919050565b600067ffffffffffffffff821115611d0857600080fd5b602082029050919050565b600067ffffffffffffffff821115611d2a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115611d5257600080fd5b602082029050919050565b600067ffffffffffffffff821115611d7457600080fd5b602082029050919050565b600067ffffffffffffffff821115611d9657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b6000819050919050565b6000602082019050919050565b600060029050919050565b600081519050919050565b600060039050919050565b600081519050919050565b600060039050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f2882611f3b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611f7d82611fb2565b9050919050565b600060048210611f9357600080fd5b819050919050565b600060048210611faa57600080fd5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015612016578082015181840152602081019050611ffb565b83811115612025576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058201111c3bb928926bd6430fccde2a254ca85d114657c94ff0d89f6a7ba5ba3cb0b6c6578706572696d656e74616cf50037";
  return Uint8Array.from(Buffer.from(bytecode, "hex"));
}
